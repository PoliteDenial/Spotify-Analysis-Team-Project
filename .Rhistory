pgFrom = html_form(pgSesh)
pgSesh
pgForm
#cross_path = //*[contains(concat( " ", @class, " " ), concat( " ", "dJFiTm", " " ))] | //*[contains(concat( " ", @class, " " ), concat( " ", "jXAKFc", " " ))] | //*[contains(concat( " ", @class, " " ), concat( " ", "lmDlLZ", " " ))] | //*[contains(concat( " ", @class, " " ), concat( " ", "gFDDbs", " " ))]
#unamexpath = //*[(@id = "login-username")]
#passxpath = //*[(@id = "login-password")]
urlI = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_login = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
l = read_html(url)
pgSesh = html_session(url_login)
pgForm = html_form(pgSesh)
pgSesh
pgForm
#
# #pgSesh = rvest::request_POST(pgsesh, url = url_login,
#                              body=list("login-username" = "zain_elsell"),
#                              login-password )
l
#cross_path = //*[contains(concat( " ", @class, " " ), concat( " ", "dJFiTm", " " ))] | //*[contains(concat( " ", @class, " " ), concat( " ", "jXAKFc", " " ))] | //*[contains(concat( " ", @class, " " ), concat( " ", "lmDlLZ", " " ))] | //*[contains(concat( " ", @class, " " ), concat( " ", "gFDDbs", " " ))]
#unamexpath = //*[(@id = "login-username")]
#passxpath = //*[(@id = "login-password")]
urlI = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_login = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
l = read_html(url)
pgSesh = html_session(url_login)
pgForm = html_form(pgSesh)[[2]]
#cross_path = //*[contains(concat( " ", @class, " " ), concat( " ", "dJFiTm", " " ))] | //*[contains(concat( " ", @class, " " ), concat( " ", "jXAKFc", " " ))] | //*[contains(concat( " ", @class, " " ), concat( " ", "lmDlLZ", " " ))] | //*[contains(concat( " ", @class, " " ), concat( " ", "gFDDbs", " " ))]
#unamexpath = //*[(@id = "login-username")]
#passxpath = //*[(@id = "login-password")]
urlI = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_login = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
l = read_html(url)
pgSesh = html_session(url_login)
pgForm = html_form(pgSesh)
#pgSesh
#pgForm
#
# #pgSesh = rvest::request_POST(pgsesh, url = url_login,
#                              body=list("login-username" = "zain_elsell"),
#                              login-password )
l
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
library(spotifyr)
install.packages("remotes")
install.packages("readr")
remotes::install_github("mvkorpel/pickURL")
library("readr")
install.packages("remotes")
install.packages("readr")
#This is
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
urls = pickURL::pick_urls(htmlVectorRaw, what = )
#This is
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
htmlVectorRaw
urls = pickURL::pick_urls(htmlVectorRaw, what = )
#This is
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
urls = pickURL::pick_urls(htmlVectorRaw)
urls
#Testing to make sure keys are equivelent lengths:
# sTrackKey_1 = "26wuBc04catG1QQyYupr35"
# sTrackKey_2 = "71LZ7lwCisTG3H9UXKraTe"
#
# if (length(sTrackKey_2) ==length(sTrackKey_1))
#   print("1")
url_pattern = "https://open.spotify.com/track/26wuBc04catG1QQyYupr35"
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
library(spotifyr)
library(stringr)
install.packages("remotes")
install.packages("readr")
remotes::install_github("mvkorpel/pickURL")
library("readr")
install.packages("remotes")
install.packages("remotes")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
library(spotifyr)
library(stringr)
install.packages("remotes")
remotes::install_github("mvkorpel/pickURL")
library("readr")
install.packages("remotes")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
library(spotifyr)
library(stringr)
#install.packages("remotes")
remotes::install_github("mvkorpel/pickURL")
library("readr")
#This is
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
links = pickURL::pick_urls(htmlVectorRaw) #links in the raw html code
#Testing to make sure keys are equivelent lengths:
# sTrackKey_1 = "26wuBc04catG1QQyYupr35"
# sTrackKey_2 = "71LZ7lwCisTG3H9UXKraTe"
#
# if (length(sTrackKey_2) ==length(sTrackKey_1))
#   print("1")
url_pattern = "https://open.spotify.com/track/26wuBc04catG1QQyYupr35"
for(i in length(pattern)){
if str_urls[i]
?str_detect
#This is
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
all_links = pickURL::pick_urls(htmlVectorRaw) #links in the raw html code
#Testing to make sure keys are equivelent lengths:
# sTrackKey_1 = "26wuBc04catG1QQyYupr35"
# sTrackKey_2 = "71LZ7lwCisTG3H9UXKraTe"
#
# if (length(sTrackKey_2) ==length(sTrackKey_1))
#   print("1")
songlinks= c()
url_pattern = "https://open.spotify.com/track"
for(i in 1:length(all_links)){
if(str_detect(all_links[i], url_pattern))
{
append(songlinks,all_links[i])
}
}
songlinks
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
library(spotifyr)
library(stringr)
#install.packages("remotes")
remotes::install_github("mvkorpel/pickURL")
library("readr")
#This is
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
all_links = pickURL::pick_urls(htmlVectorRaw) #links in the raw html code
#Testing to make sure keys are equivelent lengths:
# sTrackKey_1 = "26wuBc04catG1QQyYupr35"
# sTrackKey_2 = "71LZ7lwCisTG3H9UXKraTe"
#
# if (length(sTrackKey_2) ==length(sTrackKey_1))
#   print("1")
songlinks= c()
url_pattern = "https://open.spotify.com/track"
for(i in 1:length(all_links)){
if(str_detect(all_links[i], url_pattern))
{
append(songlinks,all_links[i])
}
}
songlinks
#This is
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
all_links = pickURL::pick_urls(htmlVectorRaw) #links in the raw html code
#Testing to make sure keys are equivelent lengths:
# sTrackKey_1 = "26wuBc04catG1QQyYupr35"
# sTrackKey_2 = "71LZ7lwCisTG3H9UXKraTe"
#
# if (length(sTrackKey_2) ==length(sTrackKey_1))
#   print("1")
songlinks= c()
url_pattern = "https://open.spotify.com/track"
for(i in 1:length(all_links)){
if(str_detect(all_links[i], url_pattern))
{
songlinks =c(all_links[i])
}
}
songlinks
#This is
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
all_links = pickURL::pick_urls(htmlVectorRaw) #links in the raw html code
#Testing to make sure keys are equivelent lengths:
# sTrackKey_1 = "26wuBc04catG1QQyYupr35"
# sTrackKey_2 = "71LZ7lwCisTG3H9UXKraTe"
#
# if (length(sTrackKey_2) ==length(sTrackKey_1))
#   print("1")
songlinks= c()
url_pattern = "https://open.spotify.com/track"
for(i in 1:length(all_links)){
if(str_detect(all_links[i], url_pattern))
{
songlinks =c(songlinks, all_links[i])
}
}
songlinks
?spotifyr
?str_extract_all
?str_replace_all
#This is where the data was taken from:
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
all_links = pickURL::pick_urls(htmlVectorRaw) # picks out all occurrences of links in the raw html code
#This is where the data was taken from:
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
all_links = pickURL::pick_urls(htmlVectorRaw) # picks out all occurrences of links in the raw html code
songlinks= c()
url_pattern = "https://open.spotify.com/track"
for(i in 1:length(all_links)){
if(str_detect(all_links[i], url_pattern))
{
songlinks =c(songlinks, all_links[i])
}
}
songKeys = str_replace_all(songlinks, url_pattern, "")
songKeys
#This is where the data was taken from:
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
all_links = pickURL::pick_urls(htmlVectorRaw) # picks out all occurrences of links in the raw html code
songlinks= c()
url_pattern = "https://open.spotify.com/track/"
for(i in 1:length(all_links)){
if(str_detect(all_links[i], url_pattern))
{
songlinks =c(songlinks, all_links[i])
}
}
songKeys = str_replace_all(songlinks, url_pattern, "")
songKeys
#This is where the data was taken from:
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
all_links = pickURL::pick_urls(htmlVectorRaw) # picks out all occurrences of links in the raw html code
songlinks= c()
url_pattern = "https://open.spotify.com/track/"
for(i in 1:length(all_links)){
if(str_detect(all_links[i], url_pattern))
{
songlinks =c(songlinks, all_links[i])
}
}
songKeys = str_replace_all(songlinks, url_pattern, "")
songKeys
topFiftyDf = data.frame(songUID = songKeys  , Artist = get_artist(songKeys))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
library(spotifyr)
library(stringr)
library(dplyr)
library(ggplot2)
library(lubridate)
#install.packages("remotes")
#remotes::install_github("mvkorpel/pickURL")
library("readr")
#This is where the data was taken from:
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
all_links = pickURL::pick_urls(htmlVectorRaw) # picks out all occurrences of links in the raw html code
songlinks= c()
url_pattern = "https://open.spotify.com/track/"
for(i in 1:length(all_links)){
if(str_detect(all_links[i], url_pattern))
{
songlinks =c(songlinks, all_links[i])
}
}
songKeys = str_replace_all(songlinks, url_pattern, "")
songKeys
topFiftyDf = data.frame(songUID = songKeys  , Artist = get_artist(songKeys))
id <- '29dd370f3d934a20999183b22e985a7b'
secret <- "84fd28b593d84527bcafcfb0adab6106"
Sys.setenv(SPOTIFY_CLIENT_ID = id)
Sys.setenv(SPOTIFY_CLIENT_SECRET = secret)
access_token <- get_spotify_access_token()
#This is where the data was taken from:
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
all_links = pickURL::pick_urls(htmlVectorRaw) # picks out all occurrences of links in the raw html code
songlinks= c()
url_pattern = "https://open.spotify.com/track/"
for(i in 1:length(all_links)){
if(str_detect(all_links[i], url_pattern))
{
songlinks =c(songlinks, all_links[i])
}
}
songKeys = str_replace_all(songlinks, url_pattern, "")
songKeys
topFiftyDf = data.frame(songUID = songKeys  , Artist = get_artist(songKeys))
#This is where the data was taken from:
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
all_links = pickURL::pick_urls(htmlVectorRaw) # picks out all occurrences of links in the raw html code
songlinks= c()
url_pattern = "https://open.spotify.com/track/"
for(i in 1:length(all_links)){
if(str_detect(all_links[i], url_pattern))
{
songlinks =c(songlinks, all_links[i])
}
}
songKeys = str_replace_all(songlinks, url_pattern, "")
songKeys
topFiftyDf = data.frame(songUID = songKeys  , Artist = get_artist(songlinks))
#This is where the data was taken from:
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
all_links = pickURL::pick_urls(htmlVectorRaw) # picks out all occurrences of links in the raw html code
songlinks= c()
url_pattern = "https://open.spotify.com/track/"
for(i in 1:length(all_links)){
if(str_detect(all_links[i], url_pattern))
{
songlinks =c(songlinks, all_links[i])
}
}
songKeys = str_replace_all(songlinks, url_pattern, "")
songKeys
topFiftyDf = data.frame(songUID = songKeys  )#, Artist = get_artist(songlinks))
topFiftyDf
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
library(spotifyr)
library(stringr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(readr)
#install.packages("remotes")
#remotes::install_github("mvkorpel/pickURL")
#This is where the data was taken from:
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
all_links = pickURL::pick_urls(htmlVectorRaw) # picks out all occurrences of links in the raw html code
songlinks= c()
url_pattern = "https://open.spotify.com/track/"
for(i in 1:length(all_links)){
if(str_detect(all_links[i], url_pattern))
{
songlinks =c(songlinks, all_links[i])
}
}
songKeys = str_replace_all(songlinks, url_pattern, "")
songKeys
get_artist(songlinks[i])
id <- '29dd370f3d934a20999183b22e985a7b'
secret <- "84fd28b593d84527bcafcfb0adab6106"
Sys.setenv(SPOTIFY_CLIENT_ID = id)
Sys.setenv(SPOTIFY_CLIENT_SECRET = secret)
access_token <- get_spotify_access_token()
#This is where the data was taken from:
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
all_links = pickURL::pick_urls(htmlVectorRaw) # picks out all occurrences of links in the raw html code
songlinks= c()
url_pattern = "https://open.spotify.com/track/"
for(i in 1:length(all_links)){
if(str_detect(all_links[i], url_pattern))
{
songlinks =c(songlinks, all_links[i])
}
}
songKeys = str_replace_all(songlinks, url_pattern, "")
songKeys
get_artist(songlinks[i])
id ='71e950603dd64e1291d04fabafee04d9'
secret = "5331da62c4644ee887ff07216c35b183"
Sys.setenv(SPOTIFY_CLIENT_ID = id)
Sys.setenv(SPOTIFY_CLIENT_SECRET = secret)
access_token <- get_spotify_access_token()
#This is where the data was taken from:
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
all_links = pickURL::pick_urls(htmlVectorRaw) # picks out all occurrences of links in the raw html code
songlinks= c()
url_pattern = "https://open.spotify.com/track/"
for(i in 1:length(all_links)){
if(str_detect(all_links[i], url_pattern))
{
songlinks =c(songlinks, all_links[i])
}
}
songKeys = str_replace_all(songlinks, url_pattern, "")
songKeys
get_track(songlinks[i])
#This is where the data was taken from:
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
all_links = pickURL::pick_urls(htmlVectorRaw) # picks out all occurrences of links in the raw html code
songlinks= c()
url_pattern = "https://open.spotify.com/track/"
for(i in 1:length(all_links)){
if(str_detect(all_links[i], url_pattern))
{
songlinks =c(songlinks, all_links[i])
}
}
songKeys = str_replace_all(songlinks, url_pattern, "")
songKeys
get_track(songlinks[1])
#This is where the data was taken from:
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
all_links = pickURL::pick_urls(htmlVectorRaw) # picks out all occurrences of links in the raw html code
songlinks= c()
url_pattern = "https://open.spotify.com/track/"
for(i in 1:length(all_links)){
if(str_detect(all_links[i], url_pattern))
{
songlinks =c(songlinks, all_links[i])
}
}
songKeys = str_replace_all(songlinks, url_pattern, "")
songKeys
get_track("https://open.spotify.com/track/02MWAaffLxlfxAUY7c5dvx")
get_my_recently_played(limit = 5) %>%
mutate(
artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)
) %>%
select(
all_of(c("track.name", "artist.name", "track.album.name", "played_at"))
) %>%
kable()
?kable
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
library(spotifyr)
library(stringr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(readr)
library(knitr)
#install.packages("remotes")
#remotes::install_github("mvkorpel/pickURL")
#This is where the data was taken from:
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "spotify_denver_local_pulse_tbody_march_28.txt"
htmlVectorRaw = read_file(raw_html_file_name)
all_links = pickURL::pick_urls(htmlVectorRaw) # picks out all occurrences of links in the raw html code
songlinks= c()
url_pattern = "https://open.spotify.com/track/"
for(i in 1:length(all_links)){
if(str_detect(all_links[i], url_pattern))
{
songlinks =c(songlinks, all_links[i])
}
}
songKeys = str_replace_all(songlinks, url_pattern, "")
songKeys
topFiftyDf = data.frame(songUID = songKeys  )#, Artist = get_artist(songlinks))
topFiftyDf
get_my_recently_played(limit = 5) %>%
mutate(
artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)
) %>%
select(
all_of(c("track.name", "artist.name", "track.album.name", "played_at"))
) %>%
kable()
