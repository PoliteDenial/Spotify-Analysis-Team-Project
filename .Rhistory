B <- 10000
sdev <- abs(b-a) * sqrt(p*(1-p))
S <- replicate(B,roulette(200))
1 - pnorm(sqrt(100) * (1/19) / sdev)
sequence <- seq(25,1000,len= 100)
plot(sequence,1 - pnorm(sqrt(sequence) * (1/19) / sdev))
B <-10000
games.in.series <- 5
series_outcome_eq <- function(n){
samp <- sample(c(1,0),n,replace = TRUE) #1 is Red Sox, 0 is Astros
sum(samp)
}
series_outcome <- replicate(B,series_outcome_eq(games.in.series))
prob_redsox_win <- mean(series_outcome>2)
prob_redsox_win
B <-10000
games.in.series <- 5
series_outcome_uneq <- function(n){
samp <- sample(c(1,0),n,replace = TRUE,c(0.4,0.6)) #1 is Red Sox, 0 is Astros
sum(samp)
}
series_outcome <- replicate(B,series_outcome_uneq(games.in.series))
prob_redsox_win <- mean(series_outcome>2)
prob_redsox_win
B <-10000
for (variable in c(3,5,7)) {
games.in.series <- variable
series_outcome <- replicate(B,series_outcome_eq(games.in.series))
prob_redsox_win <- mean(series_outcome>ceiling(games.in.series/2))
print(prob_redsox_win)
}
games.in.series <- 3
series_outcome <- replicate(B,series_outcome_eq(games.in.series))
prob_redsox_win <- mean(series_outcome > ceiling(games.in.series/2))
games.in.series <- 3
series_outcome <- replicate(B,series_outcome_eq(games.in.series))
prob_redsox_win <- mean(series_outcome > ceiling(games.in.series/2))
games.in.series <- 3
series_outcome <- replicate(B,series_outcome_eq(games.in.series))
prob_redsox_win <- mean(series_outcome > ceiling(games.in.series/2))
prob_redsox_win
games.in.series <- 3
series_outcome <- replicate(B,series_outcome_eq(games.in.series))
prob_redsox_win <- mean(series_outcome > 2)
prob_redsox_win
games.in.series <- 3
series_outcome <- replicate(B,series_outcome_eq(games.in.series))
prob_redsox_win <- mean(series_outcome > 1)
prob_redsox_win
games.in.series <- 3
series_outcome <- replicate(B,series_outcome_eq(games.in.series))
prob_redsox_win <- mean(series_outcome > floor(games.in.series/2))
prob_redsox_win
B <-10000
for (variable in c(3,5,7)) {
games.in.series <- variable
series_outcome <- replicate(B,series_outcome_eq(games.in.series))
prob_redsox_win <- mean(series_outcome > floor(games.in.series/2))
print(prob_redsox_win)
}
B <-10000
for (variable in c(3,5,7)) {
games.in.series <- variable
series_outcome <- replicate(B,series_outcome_uneq(games.in.series))
prob_redsox_win <- mean(series_outcome > floor(games.in.series/2))
print(prob_redsox_win)
}
#equal one
B <-10000
for (variable in c(3,5,7)) {
games.in.series <- variable
series_outcome <- replicate(B,series_outcome_eq(games.in.series))
prob_redsox_win <- mean(series_outcome > floor(games.in.series/2))
print(prob_redsox_win)
}
for (variable in c(3,5,7)) {
games.in.series <- variable
series_outcome <- replicate(B,series_outcome_uneq(games.in.series))
prob_redsox_win <- mean(series_outcome > ceiling(games.in.series/2))
print(prob_redsox_win)
for (variable in c(3,5,7)) {
games.in.series <- variable
series_outcome <- replicate(B,series_outcome_uneq(games.in.series))
prob_redsox_win <- mean(series_outcome > ceiling(games.in.series/2))
print(prob_redsox_win)}
for (variable in c(3,5,7)) {
games.in.series <- variable-1
series_outcome <- replicate(B,series_outcome_uneq(games.in.series))
prob_redsox_win <- mean(series_outcome > floor(games.in.series/2))
print(prob_redsox_win)}
series_outcome <- replicate(B,series_outcome_uneq(4))
series_outcome <- replicate(B,series_outcome_uneq(4))
prob_redsox_win <- mean(series_outcome > 2))
series_outcome <- replicate(B,series_outcome_uneq(4))
prob_redsox_win <- mean(series_outcome > 2)
prob_redsox_win
series_outcome <- replicate(B,series_outcome_eq(4))
prob_redsox_win <- mean(series_outcome > 2)
prob_redsox_win
series_outcome <- replicate(B,series_outcome_eq(4))
prob_redsox_win <- mean(series_outcome > 2)
prob_redsox_win
for (variable in c(3,5,7)) {
games.in.series <- variable - 1
series_outcome <- replicate(B,series_outcome_eq(games.in.series))
prob_redsox_win <- mean(series_outcome > floor(games.in.series/2))
print(prob_redsox_win)
#series_outcome <- replicate(B,series_outcome_eq(4))
#prob_redsox_win <- mean(series_outcome > 2)
# prob_redsox_win
for (variable in c(3,5,7)) {
games.in.series <- variable - 1
series_outcome <- replicate(B,series_outcome_eq(games.in.series))
prob_redsox_win <- mean(series_outcome > floor(games.in.series/2))
print(prob_redsox_win)}
#series_outcome <- replicate(B,series_outcome_eq(4))
#prob_redsox_win <- mean(series_outcome > 2)
# prob_redsox_win
for (variable in c(5,7)) {
games.in.series <- variable - 1
series_outcome <- replicate(B,series_outcome_eq(games.in.series))
prob_redsox_win <- mean(series_outcome > floor(games.in.series/2))
print(prob_redsox_win)}
gc()
roulette <- function(n){
game <- sample(c(-1,1),n,replace = TRUE,c(9/19,10/19))
sum(game)
}
library(ggplot2)
for (variable in c(100,250,500,1000)) {
earnings <- replicate(10000,roulette(variable))
normaldist <- (earnings - mean(earnings))/sd(earnings)
hist(earnings)
}
# as n gets larger, the historgram gets more normalized
for (variable in c(100,250,500,1000)) {
avg.earnings <- (replicate(10000,roulette(variable)))/variable
normaldist <- (avg.earnings - mean(avg.earnings))/sd(avg.earnings)
hist(normaldist)
}
19^2
a = 1
b = -1
p=18/38
exval <- a*p + b*(1-p)
sdev <- abs(b-a) * sqrt(p*(1-p))
mu <- -p + (1-p)
exval
sdev
n <- 200
B <- 10000
sdev <- abs(b-a) * sqrt(p*(1-p))
S <- replicate(B,roulette(200))
1 - pnorm(sqrt(100) * (1/19) / sdev)
sequence <- seq(25,1000,len= 100)
plot(sequence,1 - pnorm(sqrt(sequence) * (1/19) / sdev))
B <-10000
games.in.series <- 5
series_outcome_eq <- function(n){
samp <- sample(c(1,0),n,replace = TRUE) #1 is Red Sox, 0 is Astros
sum(samp)
}
series_outcome <- replicate(B,series_outcome_eq(games.in.series))
prob_redsox_win <- mean(series_outcome>2)
prob_redsox_win
B <-10000
games.in.series <- 5
series_outcome_uneq <- function(n){
samp <- sample(c(1,0),n,replace = TRUE,c(0.4,0.6)) #1 is Red Sox, 0 is Astros
sum(samp)
}
series_outcome <- replicate(B,series_outcome_uneq(games.in.series))
prob_redsox_win <- mean(series_outcome>2)
prob_redsox_win
#equal one
B <-10000
for (variable in c(3,5,7)) {
games.in.series <- variable
series_outcome <- replicate(B,series_outcome_eq(games.in.series))
prob_redsox_win <- mean(series_outcome > floor(games.in.series/2))
print(prob_redsox_win)
}
# Unequal One
B <-10000
for (variable in c(3,5,7)) {
games.in.series <- variable
series_outcome <- replicate(B,series_outcome_uneq(games.in.series))
prob_redsox_win <- mean(series_outcome > floor(games.in.series/2))
print(prob_redsox_win)
}
for (variable in c(5,7)) {
games.in.series <- variable - 1
series_outcome <- replicate(B,series_outcome_eq(games.in.series))
prob_redsox_win <- mean(series_outcome > floor(games.in.series/2))
print(prob_redsox_win)}
knitr::opts_chunk$set(echo = TRUE)
install.packages('spotifyr')
install.packages("tidyverse")
install.packages('knitr', dependencies = TRUE)
install.packages('ggjoy')
install.packages("knitr", dependencies = TRUE)
library(spotifyr)
library(ggjoy)     # useful for plot
library(ggplot2)   # useful for plot
library(tidyverse) # makes possible the use of %>%
library(knitr)     # library to appear data results in a better way
library(lubridate) # useful for date functions
# 2) Connect
Sys.setenv(SPOTIFY_CLIENT_ID = '5868768f135345d8846b270fb285decc')
Sys.setenv(SPOTIFY_CLIENT_SECRET = 'e6e3c1c764dd41a3a8ba0b16fafc0a7e')
access_token <- get_spotify_access_token()
library(spotifyr)
library(ggjoy)     # useful for plot
library(ggplot2)   # useful for plot
library(tidyverse) # makes possible the use of %>%
library(knitr)     # library to appear data results in a better way
library(lubridate) # useful for date functions
library(rvest)
Sys.setenv(SPOTIFY_CLIENT_ID = '69de97cd5b3a46b8989f3171df4aaf4c')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '181902407cff4e35983426669e2a52c6')
access_token <- get_spotify_access_token()
get_my_recently_played(limit = 5) %>%
mutate(artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)) %>%
select(track.name, artist.name, track.album.name, played_at) %>%
head()
beatles <- get_artist_audio_features('the beatles')
knitr::opts_chunk$set(echo = TRUE)
library(spotifyr)
library(ggjoy)     # useful for plot
library(ggplot2)   # useful for plot
library(tidyverse) # makes possible the use of %>%
library(knitr)     # library to appear data results in a better way
library(lubridate) # useful for date functions
library(rvest)
Sys.setenv(SPOTIFY_CLIENT_ID = '69de97cd5b3a46b8989f3171df4aaf4c')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '181902407cff4e35983426669e2a52c6')
access_token <- get_spotify_access_token()
beatles <- get_artist_audio_features('the beatles')
library(dplyr)
beatles %>% count(key_mode,sort = TRUE)
library(purrr)
get_my_recently_played(limit = 5) %>%
mutate(
artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)
) %>%
select(
all_of(c("track.name", "artist.name", "track.album.name", "played_at"))
)
Sys.setenv(SPOTIFY_CLIENT_ID = '69de97cd5b3a46b8989f3171df4aaf4c')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '181902407cff4e35983426669e2a52c6')
access_token <- get_spotify_access_token()
Sys.setenv(SPOTIFY_CLIENT_ID = '69de97cd5b3a46b8989f3171df4aaf4c')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '181902407cff4e35983426669e2a52c6')
access_token <- get_spotify_access_token()
get_my_recently_played(limit = 5) %>%
mutate(
artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)
) %>%
select(
all_of(c("track.name", "artist.name", "track.album.name", "played_at"))
)
knitr::opts_chunk$set(echo = TRUE)
library(spotifyr)
library(ggjoy)     # useful for plot
library(ggplot2)   # useful for plot
library(tidyverse) # makes possible the use of %>%
library(knitr)     # library to appear data results in a better way
library(lubridate) # useful for date functions
library(rvest)
library(dplyr)
library(purrr)
Sys.setenv(SPOTIFY_CLIENT_ID = '69de97cd5b3a46b8989f3171df4aaf4c')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '181902407cff4e35983426669e2a52c6')
access_token <- get_spotify_access_token()
beatles <- get_artist_audio_features('the beatles')
beatles %>% count(key_mode,sort = TRUE)
get_my_recently_played(limit = 5) %>%
mutate(
artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)
) %>%
select(
all_of(c("track.name", "artist.name", "track.album.name", "played_at"))
)
knitr::opts_chunk$set(echo = TRUE)
library(spotifyr)
library(ggjoy)     # useful for plot
library(ggplot2)   # useful for plot
library(tidyverse) # makes possible the use of %>%
library(knitr)     # library to appear data results in a better way
library(lubridate) # useful for date functions
library(rvest)
library(dplyr)
library(purrr)
Sys.setenv(SPOTIFY_CLIENT_ID = '69de97cd5b3a46b8989f3171df4aaf4c')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '181902407cff4e35983426669e2a52c6')
access_token <- get_spotify_access_token()
beatles <- get_artist_audio_features('the beatles')
beatles %>% count(key_mode,sort = TRUE)
get_my_recently_played(limit = 5) %>%
mutate(
artist.name = map_chr(track.artists, function(x) x$name[1]),
played_at = as_datetime(played_at)
) %>%
select(
all_of(c("track.name", "artist.name", "track.album.name", "played_at"))
)
Sys.setenv(SPOTIFY_CLIENT_ID = '69de97cd5b3a46b8989f3171df4aaf4c')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '181902407cff4e35983426669e2a52c6')
access_token <- get_spotify_access_token()
get_spotify_authorization_code(client_id = Sys.getenv("SPOTIFY_CLIENT_ID"),
client_secret = Sys.getenv("SPOTIFY_CLIENT_SECRET"),
scope = spotifyr::scopes)
get_spotify_authorization_code(client_id = Sys.getenv("SPOTIFY_CLIENT_ID"),client_secret = Sys.getenv("SPOTIFY_CLIENT_SECRET"),scope = spotifyr::scopes)
?get_spotify_authorization_code
get_spotify_authorization_code(
client_id = Sys.getenv("SPOTIFY_CLIENT_ID"),
client_secret = Sys.getenv("SPOTIFY_CLIENT_SECRET"),
scope = scopes()
)
Sys.setenv(SPOTIFY_CLIENT_ID = '69de97cd5b3a46b8989f3171df4aaf4c')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '181902407cff4e35983426669e2a52c6')
access_token <- get_spotify_access_token()
get_spotify_authorization_code(
client_id = Sys.getenv("SPOTIFY_CLIENT_ID"),
client_secret = Sys.getenv("SPOTIFY_CLIENT_SECRET"),
scope = scopes()
)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(spotifyr)
library(plotly)
library(dplyr)
library(spotifyr)
library(tidyverse)
library(ggplot2)
id <- '69de97cd5b3a46b8989f3171df4aaf4c'
secret <- "181902407cff4e35983426669e2a52c6"
Sys.setenv(SPOTIFY_CLIENT_ID = id)
Sys.setenv(SPOTIFY_CLIENT_SECRET = secret)
access_token <- get_spotify_access_token()
my_id <- 'your spotify id'
my_plists <- get_user_playlists(my_id)
my_plists <- get_user_playlists(my_id)
library(devtools)
library(devtools)
```{r}
library(dplyr)
install.packages("devtools")
library(devtools)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
devtools::install_github('charlie86/spotifyr')
library(spotifyr)
library(dplyr)
library(spotifyr)
library(tidyverse)
library(ggplot2)
beatles <- get_artist_audio_features("drake")
drake <- get_artist_audio_features("drake")
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
dev
drake <- get_artist_audio_features("drake")
s
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
dev
drake <- get_artist_audio_features("drake")
drake <- get_artist_audio_features("Drake")
drake <- get_artist_audio_features("the beatles")
id <- '29dd370f3d934a20999183b22e985a7b'
secret <- "84fd28b593d84527bcafcfb0adab6106"
Sys.setenv(SPOTIFY_CLIENT_ID = id)
Sys.setenv(SPOTIFY_CLIENT_SECRET = secret)
access_token <- get_spotify_access_token()
drake <- get_artist_audio_features("the beatles")
drake <- get_artist_audio_features("the beatles")
id <- '29dd370f3d934a20999183b22e985a7b'
secret <- "84fd28b593d84527bcafcfb0adab6106"
Sys.setenv(SPOTIFY_CLIENT_ID = id)
Sys.setenv(SPOTIFY_CLIENT_SECRET = secret)
access_token <- get_spotify_access_token()
drake <- get_artist_audio_features("the beatles")
drake
drake <- get_artist_audio_features("Drake")
drake
drake %>% count(key_mode)
head(drake)
drake %>% filter(c(track_name,album_name,key_mode)
drake %>% filter(c(track_name,album_name,key_mode)
drake %>% filter(drake %in% c(track_name,album_name,key_mode)
df_drake <- drake %>% select(c(track_name,album_name,key_mode))
df_drake <- drake %>% select(c(track_name,album_name,key_mode))
df_drake
col(drake)
head(drake)
columns(drake)
df_drake
print(drake)
colnames(drake)
df_drake
knitr::opts_chunk$set(echo = TRUE)
columns(drake)
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
dev
drake <- get_artist_audio_features("Drake")
head(drake)
drake <- get_artist_audio_features("Drake")
drake <- get_artist_audio_features("Drake")
df_drake
df_drake <- drake %>% select(c(track_name,album_name,key_mode,album_release_date,duration_ms))
library(dplyr)
gc()
library(dplyr)
library(dplyr)
library(dplyr)
library(tidyverse)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv("Players.csv")
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv("Players.csv")
df
df_new <- df
library(dplyr)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
df <- read.csv("Players.csv")
df_new <- df
df_new <- df_new %>% group_by
df_new <- df_new %>% group_by(Position)
df_new
df_new <- df_new %>% group_by(Position)
df_new
df_new <- df_new %>% group_by(Position) %>% summarise()
df_new
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
df <- read.csv("Players.csv")
df_new <- df
df_new$
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
df <- read.csv("Players.csv")
df_new <- df
df_new <- df_new %>% group_by(Position) %>% summarise()
df_new
df_new <- df_new %>% group_by(Position) %>% summarise(ranking)
df_new <- df_new %>% group_by(Position) %>% summarise(rank)
df_new <- df_new %>% group_by(Position) %>% summarise(salart)
df_new <- df_new %>% group_by(Position) %>% summarise(salary)
df_new
df <- read.csv("Players.csv")
df_new <- df
df_new
df_new <- df_new %>% group_by(Position) %>% summarise(Salary)
df_new <- df_new %>% group_by(Position) %>% summarise(Salary = Salary)
df_new <- df_new %>% group_by(Position) %>% summarise(Salary = Salary)
df_new
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(spotifyr)
library(stringr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(readr)
library(knitr)
#install.packages("remotes")
#remotes::install_github("mvkorpel/pickURL")
id ='71e950603dd64e1291d04fabafee04d9'
secret = '5331da62c4644ee887ff07216c35b183'
Sys.setenv(SPOTIFY_CLIENT_ID = id)
Sys.setenv(SPOTIFY_CLIENT_SECRET = secret)
access_token <- get_spotify_access_token()
access_token
id ='71e950603dd64e1291d04fabafee04d9'
secret = '5331da62c4644ee887ff07216c35b183'
Sys.setenv(SPOTIFY_CLIENT_ID = id)
Sys.setenv(SPOTIFY_CLIENT_SECRET = secret)
access_token <- get_spotify_access_token()
access_token
#This is where the data was taken from:
url_charts_local = "https://charts.spotify.com/charts/view/citypulsetrack-denver-weekly/latest"
url_charts_login_redirct = "https://accounts.spotify.com/en/login?continue=https%3A%2F%2Fcharts.spotify.com/login"
raw_html_file_name = "Local_Pulse_March_28.txt"#For teting
htmlVectorRaw = read_file(raw_html_file_name) #vector of every charcter in the
all_links = pickURL::pick_urls(htmlVectorRaw) # picks out all occurrences of links in the raw html code
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(spotifyr)
library(stringr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(readr)
library(knitr)
install.packages("remotes")
remotes::install_github("mvkorpel/pickURL")
